server {
    listen 80 default_server;

    server_name example.com www.example.com;

    root /code/public;
    index index.php;

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|txt|woff|otf|svg)$ {
        expires max;
        proxy_buffering on;
        proxy_cache_valid 200 120m;
        log_not_found off;
    }

	# removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d $request_filename)
	{
		rewrite ^/(.+)/$ /$1 permanent;
	}

	# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
	if (!-e $request_filename)
	{
		rewrite ^/(.*)$ /index.php?/$1 last;
		break;
	}

	location / {
		try_files $uri $uri/ /index.php?$query_string;
	}

	location ~* \.php$ {
        try_files $uri = 404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Do not log favicon.ico requests
    location = /favicon.ico {
        expires max;
        log_not_found off;
        access_log off;
    }

    # Do not log robots.txt requests
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Verify lets encrypt
    location ~ /.well-known {
        # Sometimes useful to use a different root, not always though
        root /usr/share/nginx/html;
        allow all;
        try_files $uri /index.php?q=$uri&$args;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }

    if ($server_protocol ~* "HTTP/1.0") {
      return 444;
    }
}